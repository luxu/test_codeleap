name: Django CI with UV

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.12', '3.13']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Verify UV installation
      run: uv --version

    - name: Install dependencies with UV
      run: |
        uv pip install --system -r pyproject.toml

    # Executar o script que gera o .env
    - name: Generate .env file
      run: |
        python contrib/env_gen.py
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DEBUG: ${{ secrets.DEBUG }}
        ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}

    - name: Run tests with pytest
      run: |
        # Executa os testes com cobertura
        pytest --cov=./ --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

    - name: Run linting
      run: |
        ruff check .
